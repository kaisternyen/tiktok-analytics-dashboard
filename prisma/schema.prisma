generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  id                String           @id @default(cuid())
  url               String           @unique
  videoId           String?          // Platform-specific video ID
  username          String
  description       String
  thumbnailUrl      String?
  currentViews      Int              @default(0)
  currentLikes      Int              @default(0)
  currentComments   Int              @default(0)
  currentShares     Int              @default(0)
  hashtags          String?
  music             String?
  isActive          Boolean          @default(true)
  createdAt         DateTime         @default(now())
  lastScrapedAt     DateTime         @default(now())
  platform          String           @default("tiktok")
  lastDailyViews    Int?
  scrapingCadence   String           @default("hourly")
  dailyViewsGrowth  Int?
  needsCadenceCheck Boolean          @default(false)
  lastModeChange    DateTime?
  trackingMode      String?
  metricsHistory    MetricsHistory[]

  @@unique([videoId, platform])
  @@map("videos")
}

model MetricsHistory {
  id        String   @id @default(cuid())
  videoId   String
  views     Int
  likes     Int
  comments  Int
  shares    Int
  timestamp DateTime @default(now())
  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@map("metrics_history")
}

model TrackedAccount {
  id          String   @id @default(cuid())
  username    String
  platform    String
  accountType String   @default("all")
  keyword     String?
  isActive    Boolean  @default(true)
  lastChecked DateTime @default(now())
  createdAt   DateTime @default(now())
  lastVideoId String?

  @@unique([username, platform])
  @@map("tracked_accounts")
}
