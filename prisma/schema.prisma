// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  id          String   @id @default(cuid())
  url         String   @unique
  username    String
  description String
  thumbnailUrl String?
  platform    String   @default("tiktok") // "tiktok", "instagram", or "youtube"
  
  // Current metrics (latest values)
  currentViews    Int      @default(0)
  currentLikes    Int      @default(0)
  currentComments Int      @default(0)
  currentShares   Int      @default(0)
  
  // Adaptive frequency tracking
  scrapingCadence String   @default("hourly") // "hourly", "daily"
  lastDailyViews  Int?     // Views from 24 hours ago for growth calculation
  dailyViewsGrowth Int?    // Views gained in last 24 hours
  needsCadenceCheck Boolean @default(false)   // Flag for videos that need cadence evaluation
  
  // Metadata
  hashtags      String?  // JSON string for MVP simplicity
  music         String?  // JSON string for MVP simplicity
  
  // Tracking info
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  lastScrapedAt DateTime @default(now())
  
  // Relationship
  metricsHistory MetricsHistory[]
  
  @@map("videos")
}

model MetricsHistory {
  id       String   @id @default(cuid())
  videoId  String
  
  // Metrics snapshot
  views    Int
  likes    Int
  comments Int
  shares   Int
  
  // Timestamp
  timestamp DateTime @default(now())
  
  // Relationship
  video Video @relation(fields: [videoId], references: [id], onDelete: Cascade)
  
  @@map("metrics_history")
}

model TrackedAccount {
  id          String   @id @default(cuid())
  username    String   // The account username/handle
  platform    String   // "tiktok", "instagram", or "youtube"
  accountType String   @default("all") // "all" or "keyword"
  keyword     String?  // Required for keyword type accounts
  isActive    Boolean  @default(true)
  lastChecked DateTime @default(now())
  createdAt   DateTime @default(now())
  
  // Track the last video ID we've seen to avoid duplicates
  lastVideoId String?
  
  @@unique([username, platform])
  @@map("tracked_accounts")
}
